Android Macro

Utilizzare lo smartphone come tasti extra a cui si possono assegnare combinazioni di tasti (macro) a scelta.
I tasti verranno divisi in più schermate richiamabili tramite dei gesti (es. slide con 2 dita). Per ogni schermata sarà necessario disporre i tasti.
Le schermate e i tasti con le relative funzionalità saranno create dall'utente tramite un editor apposito per PC (macro setup).
Per ogni tasto creato si potrà modificare:
	- Schermata di appartenenza
	- Area a schermo
	- Aspetto
		• Forma (rettangolo, cerchio, )
		• Colore bordo (nessuno, tavolozza colori)
		• Colore riempimento (background, tavolozza colori)
		• Testo
	- Aspetto quando premuto
		• Colore bordo (nessuno, tavolozza colori)
		• Colore riempimento (background, tavolozza colori)
	- Macro: combinazione di tasti da premere
	- Premi una volta: se viene tenuto premuto il tasto non conta più
	- Descrizione (solo nell'editor)
Per ogni shermata:
	- Descrizione (solo nell'editor)
	- Colore sfondo
	- Testo sfondo
	- Gesture che la richiama
	- Orientamento (verticale/orizzontale)

In oltre si dovrà prevedere l'utilizzo delle funzionalità per più dispositivi.

Dal lato PC il server deve:
	- Ricevere i comandi dall APP e inviare i comandi al SO
	- Inviare le schermate dell'editor all'APP
	- Rilevare le applicazioni in esecuzione e caricare le relative shermate sui dispositivo collegato




Problematiche:
	- Editor
	- L'output dell'editor è l'XML per le schermate + un CSV con la funzione: bottoni -> tasti?
	- Sicurezza: ogni comando deve essere identificato


Modalità di connessione:
	1- Il dispositivo si collega al server sul PC
	2- Il PC gli dice quale set di schermate caricare, inviandogli il file
	3- Il dispositivo carica il file e lo converte in tasti, ...
	4- Il dispositivo gli invia le macro premute
	- Riparte dal punto 2

Protocollo:
    1 - Il Client si collega all'IP del Server su porta 80
    2 - Il Server invia una sequenza di byte specificata per identificarne l'identità:
            Hc3;Dvs1?!ZVsr£utCfWcogS*/3}2:xmM[Rk%0iE!Kcs9*CHfc&,bKEEP8atAgh2I?Q7(6035VoNRL2Pl*wmp;*gF£9?qwOyKbpqOxHn7J1zW3qWxnT/TU_d9£Hr%j
    3 - Il Client verifica che la sequenza sia corretta
    4 - Il Client riceve la chiave pubblica inviata dal Server la chiave pubblica
        4 byte integer lunghezza della chiave in byte + byte[lunghezza inviata]
    5 - Il Server riceve la password criptada, la decripta e la confronta con quella vera (se errata chiude la connessione)
    6 - Il Server invia il file XML per le macro al nuovo Client collegato (fine trasmissione indicata con un end string '\0')
    7 - Il Client invia gli ID delle macro con un booleano per indicare la pressione o il rilascio della macro
        4 byte integer per l'ID + byte senza segno per booleno per la pressione (1) rilascio (0)
    8 - Il Server riceve i macro ID e li esegue
    - Si ripete dal punto 6

Protocollo di scoperta:
    Utilizzo Multicast
    1 - Il Client invia un pacchetto con la sequenza di identificazione del Client al Multicast 239.255.255.250
    2 - Il Server ascolta il gruppo Multicast 239.255.255.250 e invia al rispettivo Client il pacchetto con la sequenza di identificazione del Server + il nome del server
    3 - Il Client dopo il suo invio si mette in ascolto di eventuali risposte, controllandone la sequenza ricevuta
    NOTA: Il server DEVE ascoltare sulla stessa porta dove è offerto il servizio


Formato del file XML:
        <?xml ...>
        <screen colorBackground="colore in decimale"  backgroundText="" swipeType="versioni stringa dello swipe" orientation="vertical|orizontal|rotate">
            <key x1="" y1="" x2="" y2="" shape="" colorEdge="col. in decimale" colorFill="" colorEdgePress="" colorFillPress="" text="" macroID="" >
                <!--In futuro qui per la forma personalizzata o altro-->
            </key>
        </screen>
        "\0" -> fine file XML


TODO LIST:
    - Thread consuma molta CPU, metterlo in wait    =>  risolto istanziando un nuovo thread per ogni pressione
    - Gesione delle gesture e delle pressioni sui tasti, in maniera da non confonderle tra di loro  => dovrebbe andare attualmente
    - Rimuovere il tag <end/> nell' XML (affidando a un'altra procedura la lettura della stringa, che si va a concludere al carattere '\0', poi la stringa verrà passata al parser XML)
        => risolto andando ad aggiungere a String.getBytes() un byte con '\0'
    - Migliorare la ricerca automatica del server (brodcast UDP) => risolto utilizzando Multicast sull'indirizzo "239.255.255.250" (utilizzato per il protocollo SSDP)

    - Rendere sicura la connessione tramite identificazione con password => fatto, cambiare criptazione?

    - Accessi successivi del client al server saranno riconoscuti
        • Memorizzare ID dispositivo (Android ID) (utilizzare MD5 con salt per la memorizzazione e l'identificazione) [vedere come trasmettere e come memorizzare]
        • Il server ha un id (generato all'inizio) che poi viene passato ai vari device che si connettono
    - Migliorare la latenza (?)





    - SISTEMARE TOUCH QUANDO LA SCHERMATA RUOTA